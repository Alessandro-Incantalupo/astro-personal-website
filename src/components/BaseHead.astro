---
export interface Props {
    title: string;
    description: string;
    image?: string;
    ogType?: string;
}

const {title, description, image = "/social_img.webp", ogType = "website"} = Astro.props;
---
<head>
    <!-- Global Metadata -->
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width,initial-scale=1"/>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg"/>
    <meta name="generator" content={Astro.generator}/>

    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title}/>
    <meta name="description" content={description}/>

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={ogType}/>
    <meta property="og:url" content={Astro.url}/>
    <meta property="og:title" content={title}/>
    <meta property="og:description" content={description}/>
    <meta property="og:image" content={new URL(image, Astro.url)}/>

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image"/>
    <meta property="twitter:url" content={Astro.url}/>
    <meta property="twitter:title" content={title}/>
    <meta property="twitter:description" content={description}/>
    <meta property="twitter:image" content={new URL(image, Astro.url)}/>

    <meta name="astro-view-transitions-enabled" content="true"/>
    <meta name="astro-view-transitions-fallback" content="animate"/>


    <script>
        function setTheme(doc) {
            const theme_selectors = doc.querySelectorAll("#theme-selector div[data-theme]");
            const theme = window.localStorage.getItem("data-theme");

            if (theme) {
                updateTheme(doc, theme);
            } else {
                updateTheme(doc, "lofi");
            }
        }

        function updateTheme(doc, newTheme) {
            doc.querySelector("html").setAttribute("data-theme", newTheme);
            window.localStorage.setItem("data-theme", newTheme);
        }

        function changeThemeBehavior(doc) {
            const theme_selectors = doc.querySelectorAll("#theme-selector div[data-theme]");
            theme_selectors.forEach((selector) => {
                    selector.addEventListener("click", () => {
                            updateTheme(doc, selector.getAttribute("data-theme"));
                        }
                    );
                }
            );
        }

        setTheme(document);
        changeThemeBehavior(document);

        document.addEventListener("astro:before-swap", (ev) => {
                setTheme(ev.newDocument);
            }
        );

        document.addEventListener("astro:after-swap", () => changeThemeBehavior(document));
    </script>

</head>





